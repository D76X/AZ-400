https://www.udemy.com/course/practice-exams-az400-microsoft-azure-devops-engineer/
----------------------------------------------------------------
AZ-400 Microsoft Azure DevOps Engineer Exam 1 45 questions
AZ-400 Microsoft Azure DevOps Engineer Exam 2 40 questions
AZ-400 Microsoft Azure DevOps Engineer Exam 3 28 questions
----------------------------------------------------------------

-------------------------------------------------------------------------
PT02-Q0X: 
question text..
Which of the following is the option you would choose?

A0X-1: 
A0X-2: 
A0X-3: 
A0X-4: 

MY ANSWER TO PT02-Q0X
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------

CORRECT ANSWER TO PT02-Q0X
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------

--------------------------------
Practice Test 2 40 questions
--------------------------------

------------------------------------------------------------------------
PT02-Q07:

Your company hosts a web application in Azure. The company uses 
Azure Pipelines for the build and release management of the application.

Stakeholders report that the past few releases have negatively affected 
system performance. 
You configure alerts in Azure Monitor. 

You need to ensure that new releases are only deployed to production if 
the releases meet defined performance baseline criteria in the staging
environment first.

What should you use to prevent the deployment of releases that fall to
meet the performance baseline?

A07-1: A. an Azure Scheduler job
A07-2: B. a trigger
A07-3: C. a gate
A07-4: D. an Azure function
A07-5: 

MY ANSWER TO PT02-Q07
--------------------------------------------------------------------------
A07-3: C. a gate
--------------------------------------------------------------------------

CORRECT ANSWER TO PT02-Q07
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------

QUESTION POSTS
https://www.examtopics.com/discussions/microsoft/view/35525-exam-az-400-topic-3-question-16-discussion/ 
Suggested Answer: C. a gate

Scenarios and use cases for gates include: Quality validation.

Query metrics from tests on the build artifacts such as pass rate or code 
coverage and deploy only if they are within required thresholds.
Use Quality Gates to integrate monitoring into your pre-deployment or post-deployment.
This ensures that you are meeting the key health/performance metrics (KPIs) as 
your applications move from dev to production and any differences in the 
infrastructure environment or scale is not negatively impacting your KPIs.

Note: 
Gates allow automatic collection of health signals from external services,
and then promote the release when all the signals are successful at the same
time or stop the deployment on timeout. 
Typically, gates are used in connection with 
incident management, problem management, change management, monitoring, and
external approval systems.


REFS

Deployment gates
https://learn.microsoft.com/en-us/azure/devops/pipelines/release/approvals/gates?view=azure-devops

AZ-400 DevOps Exam - Udemy
Approval and Gates 
https://www.udemy.com/course/azure100/learn/lecture/33385684#overview
---------------------------------------------------------------------
----------------------------------------------------------------------
Release Pipelines Approvals Example
https://www.udemy.com/course/azure100/learn/lecture/33385702#overview

APPROVALs are manual processes that allow a release to move from stage
to stage of a release pipeline. You set up 
-one or more Approvers User 
-a timeframe for the stage Approval to be signed off by teh Approvers

----------------------------------------------------------------------
> pre-deployment approval : 
approve that the release can be deployed by means of a pipeline stage.
> post-deployment-approval: 
approve that the release has been successfully deployed by means of a 
pipeline stage and can continue to the next stage. 

----------------------------------------------------------------------
Gates with Azure Boards Work Items Query Example
https://www.udemy.com/course/azure100/learn/lecture/33385716#overview

GATEs are AUTOMATED processes that allow a release to move from stage
to stage of a release pipeline. 
For example:
the following can be used as part of the definition of a deployment GATE.
-1 Run saved queries on Azure Boards 
-2 Measure KPIs using Azure Monitor ALERTS on the deployment environment
   infrastructure 
-----------------------------------------
Check Azure Policy Compliance
Invoke Azure Function
Invoke a REST API   
Query Azure Monitor alerts **
Query Work Items
Sonar Cloud Quality Gate Status Check
-----------------------------------------
----------------------------------------------------------------------
Gates with Azure Boards Azure Monitor alerts **
https://www.udemy.com/course/azure100/learn/lecture/33385742#overview 

----------------------------------------------------------------------
> predeployment-gate: 
> post-deployment-gate:


---------------------------------------------------------------------




------------------------------------------------------------------------
PT02-Q06: 

You have a build pipeline in Azure Pipelines that occasionally fail. 

You discover that a test measuring the response time of an API endpoint 
causes the failures. 

You need to prevent the build pipeline from failing due to the test.

Which two actions should you perform? 
Each correct answer presents part of the solution.
NOTE: Each correct selection is worth one point.

A06-1: A. Set Flaky test detection to Off.
A06-2: B. Clear Flaky tests included in test pass percentage.
A06-3: C. Enable Test Impact Analysis (TIA).
A06-4: D. Manually mark the test as flaky.
A06-5: E. Enable test slicing.

MY ANSWER TO PT02-Q06
--------------------------------------------------------------------------
A06-2: B. Clear Flaky tests included in test pass percentage.
A06-4: D. Manually mark the test as flaky.
--------------------------------------------------------------------------

CORRECT ANSWER TO PT02-Q06
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------

QUESTION POSTS
https://www.examtopics.com/discussions/microsoft/view/51100-exam-az-400-topic-3-question-15-discussion/
Suggested Answer: BD
B. Clear Flaky tests included in test pass percentage.
D. Manually mark the test as flaky.

REFS
Flaky Tests - AZ-400 DevOps Exam - Udemy
https://www.udemy.com/course/azure100/learn/lecture/33592864#overview

Manage flaky tests
https://learn.microsoft.com/en-us/azure/devops/pipelines/test/flaky-test-management?view=azure-devops

If you want to ensure flaky test failures don't fail your pipeline, 
you can choose to not include them in your test summary and suppress
the test failure.
This option ensures flaky tests (both passed and failed) are removed 
from the pass percentage and shown in Tests not reported, as shown in 
the following screenshot.

Tests marked as flaky
https://learn.microsoft.com/en-us/azure/devops/pipelines/test/flaky-test-management?view=azure-devops#tests-marked-as-flaky

------------------------------------------------------------------------
PT02-Q05: 

You have an Azure DevOps organization named Contoso and an Azure subscription. 

The subscription contains 
 - an Azure virtual machine scale set named VMSS1 
 - and an Azure Standard Load Balancer named LB1. 
 
 LB1 distributes incoming requests across VMSS1 instances. 

You use Azure DevOps to build a web app named App1 and deploy App1 to VMSS1. 

App1 is accessible via HTTPS only and configured to require mutual 
authentication by using a client certificate. 

You need to recommend a solution for 
-------------------------------------
implementing a health check of App1. 
-------------------------------------

The solution must meet the following requirements:

-1 Identify whether individual instances of VMSS1 are eligible for an
   upgrade operation.
-2 Minimize administrative effort.

What should you include in the recommendation?

A05-1: A. an Azure Load Balancer health probe
A05-2: B. Azure Monitor autoscale
A05-3: C. the Custom Script Extension
A05-4: D. the Application Health extension
A05-5: 

MY ANSWER TO PT02-Q05
--------------------------------------------------------------------------
A05-4: D. the Application Health extension
--------------------------------------------------------------------------

CORRECT ANSWER TO PT02-Q05
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------


QUESTION POSTS
https://www.examtopics.com/discussions/microsoft/view/44703-exam-az-400-topic-3-question-13-discussion/ 
Suggested Answer: D. the Application Health extension


REFS

Azure Load Balancer health probes
https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-custom-probe-overview

Overview of autoscale in Azure
https://learn.microsoft.com/en-us/azure/azure-monitor/autoscale/autoscale-overview

Using Application Health extension with Virtual Machine Scale Sets
https://learn.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension?tabs=rest-api


----------------------------------
Azure Load Balancer health probes
https://learn.microsoft.com/en-us/azure/load-balancer/load-balancer-custom-probe-overview
----------------------------------

Azure Load Balancer rules require a health probe to detect the endpoint status. 
Use health probes 
 - to detect the failure of an application. 
 - to generate a custom response to a health probe.
 - for flow control to manage load or planned downtime.

When a health probe fails, the load balancer stops sending new connections to
the respective unhealthy instance.

Probe protocols > Basic SKU: TCP, HTTP > Std SKU: +HTTPS

--------------------
Probe down behavior
--------------------

Scenario 1- Single instance probes down
New TCP connections succeed to remaining healthy backend endpoint.
Established TCP connections to this backend endpoint continue.

Scenario 2- All instances probe down
No new flows are sent to the backend pool. 

 > Standard Load Balancer 
   allows established TCP flows to continue given that a backend pool
   has more than one backend instance. 
 > Basic Load Balancer terminates all existing TCP flows to the backend pool.

------------------
Probe properties
------------------
...

----------------------------------
Azure Load Balancer health probes
Limitations
----------------------------------

-1 HTTPS probes don't support mutual authentication with a client certificate.
-2 A Basic SKU load balancer health probe isn't supported with a virtual machine scale set.
-3 You should assume health probes fail when TCP timestamps are enabled.
-4 HTTP probes don't support probing on the following ports due to 
   security concerns: 19, 21, 25, 70, 110, 119, 143, 220, 993.

Note:

Limitation-1 
HTTPS probes don't support mutual authentication with a client certificate.

rules out that Azure Load Balancer health probes can be used in this scenario 
because of the requirement.
-------------------------------------------------------------------------------------------
App1 is accessible via HTTPS only and configured to require mutual mutual authentication 
by using a client certificate ( << this is imprtant!)
--------------------------------------------------------------------------------------------


Using Application Health extension with Virtual Machine Scale Sets
https://learn.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension?tabs=rest-api
-------------------------------------------------------------------
Monitoring your application health for managing and upgrading your deployment. 
Azure Virtual Machine Scale Sets provide support for 
 - Rolling Upgrades 
 - including Automatic OS-Image Upgrades 
- Automatic VM Guest Patching,
  which rely on health monitoring of the individual instances to upgrade
  your deployment. 
  
You can also use Application Health Extension to monitor the application health
of each instance in your scale set and 
- perform instance repairs using Automatic Instance Repairs.

two types of Application Health extension
 - Binary Health States 
 - Rich Health States

---------------------------------------------
When to use the Application Health extension
---------------------------------------------
The extension probes on a local application endpoint and will update the health
status based on TCP/HTTP(S) responses received from the application.
This health status is used by Azure to initiate repairs on unhealthy instances
and to determine if an instance is eligible for upgrade operations. 

The extension reports health 
********************************************************************* 
from within a VM and can be used in situations where an external 
probe such as the Azure Load Balancer health probes can’t be used.
*********************************************************************

Note:

This last statement confirms that Application Health extension can be used 
with teh VMs of the scale set VMSS1 in this scanario in place of the  
Azure Load Balancer health probe which cannot be used in this case due to
the requirement of the HTTPS mutual authentication by using a client 
certificate which is not a supported scenario of the Azure Load Balancer 
health probe.


------------------------------------------------------------------------
PT02-Q04: 

You are building an ** ASP.NET Core ** application. 
You plan to create an application utilization baseline by capturing 
telemetry data.
You need to add code to the application to capture the telemetry data. 


------------------------------------------------------------------
The solution must minimize the costs of storing the telemetry data.
------------------------------------------------------------------

Which two actions should you perform?

A04-1: A. Add the <InitialSamplingPercentage>99</InitialSamplingPercentage> parameter to the ApplicationInsights.config file.
A04-2: B. From the code of the application, enable adaptive sampling.
A04-3: C. From the code of the application, add Azure Application Insights telemetry.
A04-4: D. Add the <MaxTelemetryItemsPerSecond>5</MaxTelemetryItemsPerSecond> parameter to the ApplicationInsights.config file.
A04-5: E. From the code of the application, disable adaptive sampling.

MY ANSWER TO PT02-Q04
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------

CORRECT ANSWER TO PT02-Q04
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------

QUESTION POSTS
https://www.examtopics.com/discussions/microsoft/view/44154-exam-az-400-topic-3-question-12-discussion/

Suggested Answer: BD
B. From the code of the application, enable adaptive sampling.
D. Add the <MaxTelemetryItemsPerSecond>5</MaxTelemetryItemsPerSecond> parameter to the ApplicationInsights.config file.

Most Voted Answer: CD 
C. From the code of the application, add Azure Application Insights telemetry.
E. From the code of the application, disable adaptive sampling. 

Comment:
E is "disable adaptive sampling". it does no make sense. 
the question mentioned "minimize cost of storing the telemetry data", so adaptive 
sampling should not be disabled. And, in ASP.NET Core, 
adaptive sampling is enabled by default.

REFS
Sampling in Application Insights
https://learn.microsoft.com/en-us/azure/azure-monitor/app/sampling

It's the recommended way 
 - to reduce telemetry traffic
 - to reduce data costs and storage costs
   while preserving a statistically correct analysis of application data. 
 - avoid Application Insights throttling your telemetry

The sampling filter selects items that are related, so that you can 
navigate between items when you're doing diagnostic investigations.
When metric counts are presented in the portal, they're renormalized to
take into account sampling. Doing so minimizes any effect on the statistics.

There are three different types of sampling: 
 - adaptive sampling : enabled by default in all recent SDKs
 - fixed-rate sampling 
 - ingestion sampling : It doesn't reduce telemetry traffic sent from your app, 
   but helps you keep within your monthly quota.
   The main advantage of ingestion sampling is that you can set the sampling
   rate without redeploying your app. 


When to use sampling?
In general, for most small and medium size applications you don't need sampling.

 - Application Insights service drops ("throttles") data points when 
   your app sends a high rate of telemetry in a short time interval. 
   Sampling reduces the likelihood that your application sees throttling occur.
 - To keep within the quota of data points for your pricing tier.
 - To reduce network traffic from the collection of telemetry.

-----------------
Adaptive sampling
-----------------
Adaptive sampling is enabled by default when you use the 
ASP.NET SDK or the 
ASP.NET Core SDK, 
and is also enabled by default for Azure Functions.

The volume is adjusted automatically to keep within a specified maximum 
rate of traffic, and is controlled via the setting 
-----------------------------
MaxTelemetryItemsPerSecond. 
-----------------------------

----------------------
Fixed-rate sampling
----------------------
Fixed-rate sampling reduces the traffic sent from your web server and web browsers. 
Unlike adaptive sampling, it reduces telemetry at a fixed rate decided by you. 
Fixed-rate sampling is available for ASP.NET, ASP.NET Core, Java and Python applications.

------------------------------------------------------------------
Configuring fixed-rate sampling for ASP.NET Core applications
------------------------------------------------------------------
1. Disable adaptive sampling

Changes can be made after the WebApplication.CreateBuilder() method, 
using ApplicationInsightsServiceOptions:

```
var builder = WebApplication.CreateBuilder(args);
var aiOptions = new Microsoft.ApplicationInsights.AspNetCore.Extensions.ApplicationInsightsServiceOptions();
aiOptions.EnableAdaptiveSampling = false; // Disable !
builder.Services.AddApplicationInsightsTelemetry(aiOptions);
var app = builder.Build();
```

2. Enable the fixed-rate sampling module

Changes can be made after the WebApplication.CreateBuilder() method:

```
var builder = WebApplication.CreateBuilder(args);

builder.Services.Configure<TelemetryConfiguration>(telemetryConfiguration =>
{
    var builder = telemetryConfiguration.DefaultTelemetrySink.TelemetryProcessorChainBuilder;

    // Using fixed rate sampling
    double fixedSamplingPercentage = 10;
    builder.UseSampling(fixedSamplingPercentage);
});

builder.Services.AddApplicationInsightsTelemetry(new ApplicationInsightsServiceOptions
{
    EnableAdaptiveSampling = false,
});

var app = builder.Build(); 
```

------------------------------------------------------------------
Configuring fixed-rate sampling for ASP.NET applications
------------------------------------------------------------------

1. Disable adaptive sampling: In ApplicationInsights.config, remove
   or comment out the AdaptiveSamplingTelemetryProcessor node.

<TelemetryProcessors>
    <!-- Disabled adaptive sampling:
    <Add Type="Microsoft.ApplicationInsights.WindowsServer.TelemetryChannel.AdaptiveSamplingTelemetryProcessor, Microsoft.AI.ServerTelemetryChannel">
        <MaxTelemetryItemsPerSecond>5</MaxTelemetryItemsPerSecond>
    </Add>
    -->

2. Enable the fixed-rate sampling module. Add this snippet to ApplicationInsights.config:
<TelemetryProcessors>
    <Add Type="Microsoft.ApplicationInsights.WindowsServer.TelemetryChannel.SamplingTelemetryProcessor, Microsoft.AI.ServerTelemetryChannel">
        <!-- Set a percentage close to 100/N where N is an integer. -->
        <!-- E.g. 50 (=100/2), 33.33 (=100/3), 25 (=100/4), 20, 1 (=100/100), 0.1 (=100/1000) -->
        <SamplingPercentage>10</SamplingPercentage>
    </Add>
</TelemetryProcessors>

------------------------------------------------------------------------
PT02-Q03: 

You are automating the testing process for your company. 
You need to automate UI testing of a web application. 

Which framework should you use?

A03-1: A. JaCoco
A03-2: B. Selenium | B. Playwright
A03-3: C. Xamarin.UITest
A03-4: D. Microsoft.CodeAnalysis

MY ANSWER TO PT02-Q03
--------------------------------------------------------------------------
A03-2: B. Selenium | B. Playwright
--------------------------------------------------------------------------

CORRECT ANSWER TO PT02-Q03
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------

QUESTION POSTS
https://www.examtopics.com/discussions/microsoft/view/20531-exam-az-400-topic-3-question-11-discussion/
https://www.examtopics.com/discussions/microsoft/view/111507-exam-az-400-topic-9-question-7-discussion/

REFS

SELENIUM
https://docs.microsoft.com/en-us/azure/devops/pipelines/test/continuous-test-selenium?view=azure-devops

Use Playwright to automate and test in Microsoft Edge
https://learn.microsoft.com/en-us/microsoft-edge/playwright/

The Playwright library provides cross-browser automation through a single API.
with a single API. Playwright is built to enable cross-browser web automation
that is evergreen, capable, reliable, and fast. Because Microsoft Edge is built
 on the open-source Chromium web platform, Playwright is also able to automate
 Microsoft Edge.

Playwright launches headless browsers by default. 
Headless browsers don't display a UI, so instead you must use the command line.
You can also configure Playwright to run full (non-headless) Microsoft Edge 
as well.


------------------------------------------------------------------------
PT02-Q02: 

You have an Azure subscription that contains resources 
in several resource groups.

You need to ** design a monitoring strategy ** that will provide a 
** consolidated view. **

The solution must support the following requirements:

-1 
Support role-based access control (RBAC) by using 
Azure Active Directory (Azure AD) identifies.
-2
Include visuals from Azure Monitor that are generated by 
using the Kusto query language.
-3
Support documentation is written in markdown.
-4
Use the latest data available for each visual.

What should you use to create the consolidated view?

A02-1: A. Azure Monitor
A02-2: B. Microsoft Power BI
A02-3: C. Azure Data Explorer
A02-4: D. Azure dashboards

MY ANSWER TO PT02-Q02
--------------------------------------------------------------------------
A02-4: D. Azure dashboards
--------------------------------------------------------------------------

CORRECT ANSWER TO PT02-Q02
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------

QUESTION POSTS
https://www.examtopics.com/discussions/microsoft/view/44298-exam-az-400-topic-3-question-10-discussion/


Suggested Answer: C. Azure Data Explorer

There are several tools available for running queries in Azure Data Explorer,
including Kusto.
Kusto uses a role-based access control (RBAC) model, under which authenticated
principals are mapped to roles, and get access according to the roles they're
assigned.
Note: Azure Data Explorer is a highly scalable and secure analytics service
that enables you to do rich exploration of structured and unstructured data
for instant insights. 
Optimized for ad-hoc queries, Azure Data Explorer enables rich data exploration
over raw, structured, and semi-structured data delivering fast time to insight.
Query with a modern, intuitive query language that offers fast, ad-hoc, and 
advanced query capabilities over high-rate data volumes and varieties
Reference:
https://docs.microsoft.com/en-us/azure/data-explorer/tools-integrations-overview

------------------------------------------------------------------------
PT02-Q01: 

You have an Azure DevOps organization named Contoso and an Azure subscription.

The subscription contains an Azure virtual machine scale set named VMSS1 
that is configured for autoscaling.

You use Azure DevOps to build a web app named App1 and deploy App1 to VMSS1.
App1 is used heavily and has usage patterns that vary on a weekly basis.

You need to recommend a solution to detect an abnormal rise in the rate of
failed requests to App1. 

The solution must minimize administrative effort.
What should you include in the recommendation?

A01-1: A. the Smart Detection feature in Azure Application Insights
A01-2: B. the Failures feature in Azure Application Insights
A01-3: C. an Azure Service Health alert
A01-4: D. an Azure Monitor alert that uses an Azure Log Analytics query

MY ANSWER TO PT02-Q01
--------------------------------------------------------------------------
A. the Smart Detection feature in Azure Application Insights
--------------------------------------------------------------------------

CORRECT ANSWER TO PT02-Q01
--------------------------------------------------------------------------
?
--------------------------------------------------------------------------

QUESTION POSTS
https://www.examtopics.com/discussions/microsoft/view/36102-exam-az-400-topic-3-question-8-discussion/
https://www.examtopics.com/discussions/microsoft/view/76270-exam-az-400-topic-3-question-28-discussion/

Suggested Answer: A. the Smart Detection feature in Azure Application Insights

REFS

Smart detection in Application Insights
https://learn.microsoft.com/en-us/azure/azure-monitor/alerts/proactive-diagnostics

2)
Smart detection **automatically warns** you of potential 
performance problems and failure anomalies in your web application. 
It performs proactive analysis of the telemetry that your app sends to 
Application Insights. If there's a sudden rise in failure rates or abnormal patterns
in client or server performance, you get an alert. 
-------------------------------------
This feature needs no configuration. 
-------------------------------------
It operates if your application sends enough telemetry.

-------------------------------------
Smart detection email notifications
-------------------------------------

All smart detection rules, except for rules marked as preview, are configured 
by default to send email notifications when detections are found.
You can configure email notifications for a specific smart detection rule. 
On the smart detection Settings pane, select the rule to open the Edit rule pane.

Alternatively, you can change the configuration by using 
Azure Resource Manager templates. 
For more information, see Manage Application Insights smart detection rules
by using Azure Resource Manager templates.

1)
Diagnose exceptions in web apps with Application Insights
Diagnose failures using the Azure portal
https://learn.microsoft.com/en-us/azure/azure-monitor/app/asp-net-exceptions